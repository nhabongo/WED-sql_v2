--manage timeout of open transactions
pg_stat_activity
pg_locks

--advisory locks
table oid = select 'table name'::regclass::oid)::integer
select pg_try_advisory_lock(<table oid>, <row_number>)
select pg_advisory_unlock(<table oid>, <row_number>)

--kill transaction

--reset id for job pool
number of rows vs currval('seq')
setval('seq'::regclass, value)

--condition match
trigger on wed_trig (validate trname) (done)
remove any ';' and single quote before match (done)
remove CREATE, DROP, ALTER, GRANT, REVOKE, SELECT, INSERT, UPDATE, DELETE (done)

--wed_attr
force attr names to lowercase

--wed_flow
block update on wid

--optimizations
cache imports on SD global dictionary
cache cpred

--lock mechanism
begin;
select pg_try_advisory_xact_lock(wid,tgid);
update wed_flow set ... where wid=...;
commit;

--features
it is possible to go from one inconsistent state to another inconsistent state
