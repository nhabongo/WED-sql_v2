--O que é ?

  WED-SQL é uma implementação do modelo WED-flow que utiliza um sgbd relacional e a linguagem SQL para gerenciar,
definir propriedades e controlar o fluxo de dados de transações longas (Long-lived Transactions). Por utilizar
como base tecnologias consolidadas e amplamente adotadas no universo da computação, a WED-SQL visa difundir a adoçao
do paradigma WED-flow na modelagem de processos de negócio , além de criar uma ferramenta robusta, facilmente
escalável, simples de ser utilizada e que permita flexibilidade na especificação de controle de fluxos.

--Como funciona ? (wed-server, wed-worker, bg_worker)
#webservice, fault tolerance, keep alive transaction, exception management

  Com o objetivo de  ser utilizada em um ambiente distribuido, mais especificamente por meio de web-services, e também
devido à natureza das transações longas, a WED-SQL foi construida utilizando a arquitetura cliente-servidor. A componente
servidor, ou WED-server, é responsável por fazer o controle de fluxo de dados de acordo com as WED-conditions definidas
para um determinado WED-flow, disparando as WED-triggers conforme necessário. Já a componente cliente, ou WED-worker (
quem sabe até WED-service), é quem efetivamente realiza as WED-transitions.

#postgresl catalog driven, mvcc, extensions
#aproveitar arcabouço transacional, linguagem alto nivel
  O WED-server é, basicamente, uma extensão para o sgbd Postgresql composta de triggers, tabelas de controle e "stored
procedures". A escolha do Postgresql como base do WED-server se deu por diversos motivos, tais quais, ser de código aberto, 
implemetação modular baseada em catálogs (system catalog driven), facilidade de extender suas funcionalidades por meio de
código C e tambem em liguagens de alto nível como Python e Perl. Por ser de código aberto, a licensa do Postgresql garante
que o software possa ser modificado e redistribuido, além de que, o acesso ao código fonte possibilita uma melhor compreensão
dos mecanismos interno, garantido uma implementação mais robusta e eficiente do paradigma WED-flow. O postgresql armazena seus
dados de controle em tabelas que são acessíveis aos usuários, que são chamadas de catálogos de sistema, viabilizando a 
criação de modulos para extender suas funcionalidades. Dados de transações podem ser facilmente obtidos por meio desses 
catálogos de sistema, o que é partircularmente útil no caso do WED-server. Dada a natureza dinâmica do modelo WED-flow,
a utilização de uma linguagem de programação de alto nível, como Python, é fundamental para que a expressividade desse
modelo seja implementada de forma plena. Do ponto de vista de implementação, o WED-server contém código Python, SQL, C e 
aproveita o arcabouço transacional clássico (propriedades ACID, controle de concorrência e etc) fornecido pelo Postgresql.

  Já o WED-worker tem a função de conectar-se ao WED-server para efetuar as WED-transitions. Cada WED-transition é associada
a um ou mais WED-workers, dependendo da demanda de trabalho gerada pelo WED-server, e cada WED-worker é especializado
em realizar uma WED-transition específica. A quantidade máxima de WED-workers





  

 
    
